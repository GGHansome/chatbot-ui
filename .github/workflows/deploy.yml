name: Build and Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    # container:
    #   image: node:20.13.1-slim

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm config set registry https://registry.npmmirror.com
          npm ci

      - name: Set up .production.env
        run: |
          touch .production.env
          echo NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} >> .production.env
          echo SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }} >> .production.env
          echo NEXT_PUBLIC_SUPABASE_URL=${{ vars.NEXT_PUBLIC_SUPABASE_URL }} >> .production.env
          echo NEXT_PUBLIC_USER_FILE_SIZE_LIMIT=${{ vars.NEXT_PUBLIC_USER_FILE_SIZE_LIMIT }} >> .production.env

      - name: Build the project
        run: npm run build

      - name: Move public to .next/standalone
        run: |
          mkdir -p .next/standalone
          mv public .next/standalone/public

      - name: Move .next/static to .next/standalone/.next
        run: |
          mkdir -p .next/standalone/.next
          mv .next/static .next/standalone/.next/static

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: standalone
          path: .next/standalone

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: standalone

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Upload to Server
        run: rsync -avz --delete ./.next/standalone/ root@116.205.186.224:~/app/standalone/

      - name: Cleanup
        run: rm ~/.ssh/id_rsa
